@inject IIataLocationService IataLocationService

<div class="row">
    <div class="col-md-8">
        <EditForm EditContext="_ec" FormName="CreateFlight" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="DepartureTime" class="form-label">Departure Time:</label>
                <InputDate Type="InputDateType.DateTimeLocal"
                min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")"
                id="DepartureTime" @bind-Value="NewFlight.DepartureTime" class="form-control" />
                <ValidationMessage For="() => NewFlight.DepartureTime" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="ArrivalTime" class="form-label">Arrival Time:</label>
                <InputDate Type="InputDateType.DateTimeLocal"
                min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")"
                id="ArrivalTime" @bind-Value="NewFlight.ArrivalTime" class="form-control" />
                <ValidationMessage For="() => NewFlight.ArrivalTime" class="text-danger" />
            </div>

            <div class="mb-3">
                <h4>Select Origin:</h4>
                <InputSelect id="IataOriginId" @bind-Value="NewFlight.IataOriginId">
                    @if (Iatas == null)
                    {
                        <span>Loading...</span>
                    }
                    else
                    {
                        @foreach (var iata in Iatas)
                        {
                            <option value="@iata.Id">From: @iata.Iata (@iata.City)</option>
                        }
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <h4>Select Destination:</h4>
                <InputSelect id="IataDestinationId" @bind-Value="NewFlight.IataDestinationId">
                    @if (Iatas == null)
                    {
                        <span>Loading...</span>
                    }
                    else
                    {
                        @foreach (var iata in Iatas)
                        {
                            <option value="@iata.Id">To: @iata.Iata (@iata.City)</option>
                        }
                    }
                </InputSelect>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private EditContext _ec = new EditContext(new Flight());
    [Parameter]
    public EventCallback<Flight> OnValidSubmit { get; set; }

    public async Task CheckValidSubmitAsync()
    {
        if (_ec.Validate() && OnValidSubmit.HasDelegate)
        {
            var flightToSend = new Flight()
            {
                DepartureTime = NewFlight.DepartureTime,
                ArrivalTime = NewFlight.ArrivalTime,
                IataDestinationId = NewFlight.IataDestinationId,
                IataOriginId = NewFlight.IataOriginId
            };

            await OnValidSubmit.InvokeAsync(flightToSend);
        }
    }

    [SupplyParameterFromForm(FormName = "CreateFlight")]
    private Flight NewFlight { get; set; } = new Flight
    {
        DepartureTime = DateTime.Now,
        ArrivalTime = DateTime.Now
    };

    protected override async Task OnInitializedAsync()
    {
        Iatas = await IataLocationService.GetAll() ?? new List<IataLocation>();

        _ec = new EditContext(NewFlight);
    }

    public List<IataLocation> Iatas = new List<IataLocation>();

}
@page "/pc"
@inject IService<Hotel> HotelService
@inject IService<TravelPackage> TravelPackageService
<PageTitle>Put together a package!</PageTitle>



<div class="row">
    <div class="col-md-8">
        <EditForm method="post" Model="TravelPackage" OnValidSubmit="AddTravelPackage" FormName="CreateTravelPackage" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label>
                <InputText id="title" @bind-Value="TravelPackage.Title" class="form-control"/>
                <ValidationMessage For="() => TravelPackage.Title" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputText id="description" @bind-Value="TravelPackage.Description" class="form-control" />
                <ValidationMessage For="() => TravelPackage.Description" class="text-danger" />
            </div>
            <div class="mb-3">
                <h4>Hotel</h4>
                <InputSelect id="hotelId" @bind-Value="TravelPackage.HotelId">
                    @foreach (var hotel in Hotels)
                    {
                        <option value="@hotel.Id">@hotel.Name (@hotel.Address)</option>
                    }
                </InputSelect>
            </div>

            <button type="submit" class="btn btn-primary">Tilknyt flightpath</button>
        </EditForm>
    </div>

    @if (TravelPackage.Id == 0)
    {
        <span>Waiting for Id</span>
    }
    else
    {
        <FPCreation newId="@TravelPackage.Id" />
    }
    @if (TravelPackage.Title != null)
    {
        <h2>@TravelPackage.Title</h2>
    }
</div>

@code {
    [SupplyParameterFromForm(FormName = "CreateTravelPackage")]
    public TravelPackage TravelPackage { get; set; } = new()
    {
    };

    protected override async Task OnInitializedAsync()
    {

        Hotels = await HotelService.GetAll() ?? new List<Hotel>();
    }
    public List<Hotel>? Hotels = new List<Hotel>();


    public async Task AddTravelPackage()
    {
        await TravelPackageService.Add(TravelPackage);
    }
}

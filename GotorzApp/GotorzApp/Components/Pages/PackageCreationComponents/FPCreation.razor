@page "/hc"
<h3>FlightPath creation</h3>

<div class="row">
    <div class="col-md-8">
        <EditForm method="post" Model="NewFlightpath" OnValidSubmit="AddFlightPath" FormName="CreateFlightPath" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="fare" class="form-label">Price:</label>
                <InputNumber id="fare" @bind-Value="NewFlightpath.Fare" class="form-control" />
                <ValidationMessage For="() => NewFlightpath.Fare" class="text-danger" />
            </div>
            <div>
                <label for="luggage" class="form-label">Luggage:</label>
                <InputCheckbox id="luggage" @bind-Value="NewFlightpath.Luggage" class="form-control"/>
                <ValidationMessage For="() => NewFlightpath.Luggage" class="text-danger" />
            </div>

            <h4>Outbound Flight kode linje 20-50</h4>
            <InputSelect id="outboundDestination" @bind-Value="NewFlightpath.OutboundFlight">
                @foreach (var flight in Flights)
                {
                    <option value="@flight">From: @flight.Iataorigin.Iata To: @flight.Iatadestination.Iata To</option>
                }

            </InputSelect>

            <h4>Homebound Flight kode line 51-81</h4>
            <InputSelect id="homeboundDestination" @bind-Value="NewFlightpath.HomeboundFlight">
                @foreach (var flight in Flights)
                {
                    <option value="@flight">From: @flight.Iataorigin.Iata To: @flight.Iatadestination.Iata</option>
                }

            </InputSelect>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@if (created)
{
    <h1>@NewFlightpath.Luggage</h1>
}


@code {
    bool created = false;
    public async Task AddFlightPath()
    {
        created = true;
    }

    [SupplyParameterFromForm(FormName = "CreateFlightPath")]
    public Flightpath NewFlightpath { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {

        Flights = GetDummyFlights();
    }

    public List<Flight> Flights;

    public List<Flight> GetDummyFlights()

    {

        var iataLocations = new List<IataLocation>

    {

        new IataLocation { Id = 1, Iata = "JFK", City = "New York" },

        new IataLocation { Id = 2, Iata = "LAX", City = "Los Angeles" },

        new IataLocation { Id = 3, Iata = "LHR", City = "London" },

        new IataLocation { Id = 4, Iata = "CDG", City = "Paris" },

        new IataLocation { Id = 5, Iata = "DXB", City = "Dubai" },

        new IataLocation { Id = 6, Iata = "HKG", City = "Hong Kong" },

        new IataLocation { Id = 7, Iata = "SYD", City = "Sydney" },

        new IataLocation { Id = 8, Iata = "FRA", City = "Frankfurt" },

        new IataLocation { Id = 9, Iata = "SIN", City = "Singapore" },

        new IataLocation { Id = 10, Iata = "NRT", City = "Tokyo" }

    };

        return new List<Flight>

    {

        new Flight

        {

            Id = 1,

            DepartureTime = new DateTime(2025, 3, 26, 8, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 10, 30, 0),

            IatadestinationId = 2,

            IataoriginId = 1,

            Iatadestination = iataLocations[1],

            Iataorigin = iataLocations[0]

        },

        new Flight

        {

            Id = 2,

            DepartureTime = new DateTime(2025, 3, 26, 9, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 11, 30, 0),

            IatadestinationId = 3,

            IataoriginId = 2,

            Iatadestination = iataLocations[2],

            Iataorigin = iataLocations[1]

        },

        new Flight

        {

            Id = 3,

            DepartureTime = new DateTime(2025, 3, 26, 10, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 12, 30, 0),

            IatadestinationId = 4,

            IataoriginId = 3,

            Iatadestination = iataLocations[3],

            Iataorigin = iataLocations[2]

        },

        new Flight

        {

            Id = 4,

            DepartureTime = new DateTime(2025, 3, 26, 11, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 13, 30, 0),

            IatadestinationId = 5,

            IataoriginId = 4,

            Iatadestination = iataLocations[4],

            Iataorigin = iataLocations[3]

        },

        new Flight

        {

            Id = 5,

            DepartureTime = new DateTime(2025, 3, 26, 12, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 14, 30, 0),

            IatadestinationId = 6,

            IataoriginId = 5,

            Iatadestination = iataLocations[5],

            Iataorigin = iataLocations[4]

        },

        new Flight

        {

            Id = 6,

            DepartureTime = new DateTime(2025, 3, 26, 13, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 15, 30, 0),

            IatadestinationId = 7,

            IataoriginId = 6,

            Iatadestination = iataLocations[6],

            Iataorigin = iataLocations[5]

        },

        new Flight

        {

            Id = 7,

            DepartureTime = new DateTime(2025, 3, 26, 14, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 16, 30, 0),

            IatadestinationId = 8,

            IataoriginId = 7,

            Iatadestination = iataLocations[7],

            Iataorigin = iataLocations[6]

        },

        new Flight

        {

            Id = 8,

            DepartureTime = new DateTime(2025, 3, 26, 15, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 17, 30, 0),

            IatadestinationId = 9,

            IataoriginId = 8,

            Iatadestination = iataLocations[8],

            Iataorigin = iataLocations[7]

        },

        new Flight

        {

            Id = 9,

            DepartureTime = new DateTime(2025, 3, 26, 16, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 18, 30, 0),

            IatadestinationId = 10,

            IataoriginId = 9,

            Iatadestination = iataLocations[9],

            Iataorigin = iataLocations[8]

        },

        new Flight

        {

            Id = 10,

            DepartureTime = new DateTime(2025, 3, 26, 17, 0, 0),

            ArrivalTime = new DateTime(2025, 3, 26, 19, 30, 0),

            IatadestinationId = 1,

            IataoriginId = 10,

            Iatadestination = iataLocations[0],

            Iataorigin = iataLocations[9]

        }

    };

    }
}
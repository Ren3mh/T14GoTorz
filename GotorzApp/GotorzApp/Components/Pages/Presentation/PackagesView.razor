@page "/"
@* @inject IService<TravelPackage> TravelPackageService*@

<h2>Travel Packages</h2>

@if (travelPackages == null)
{
    <span>Loading...</span>
}
else if(travelPackages.Count == 0)
{
    <span>No packages found.</span>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var travelPackage in travelPackages)
                        {
                            <tr>
                                <td>@travelPackage.Title</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-1">

            </div>
            <div class="col">
                <h2>@SelectedPackage.Title</h2>
                <div class="col">
                    <h3>Hotel</h3>
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <h5>Name</h5>
                                <p>@SelectedPackage.Hotel.Name</p>
                            </div>
                            <div class="col">
                                <h5>Check In</h5>
                                <p>@SelectedPackage.Hotel.CheckIn</p>
                            </div>
                            <div class="col">
                                <h5>Check Out</h5>
                                <p>@SelectedPackage.Hotel.CheckOut</p>
                            </div>
                            <div class="col">
                                <h5>Address</h5>
                                <p>@SelectedPackage.Hotel.Address</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <h3>Flightpaths</h3>
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <h5>From</h5>
                                @foreach (var flightpath in SelectedPackage.Flightpaths)
                                {
                                    <p>@flightpath.OutboundFlight.Iataorigin.City - @flightpath.OutboundFlight.Iataorigin.Iata</p>
                                }
                            </div>
                            <div class="col">
                                <h5>To</h5>
                                @foreach (var flightpath in SelectedPackage.Flightpaths)
                                {
                                    <p>@flightpath.OutboundFlight.Iatadestination.City - @flightpath.OutboundFlight.Iatadestination.Iata</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@code {
    public TravelPackage? SelectedPackage => travelPackages.FirstOrDefault();

    private List<TravelPackage> travelPackages = new List<TravelPackage>();

    protected override async Task OnInitializedAsync()
    {
        //travelPackages = await TravelPackageService.GetAll() ?? new List<TravelPackage>();
        travelPackages = GetDummyTravelPackages() ?? new List<TravelPackage>();
    }

    public static List<TravelPackage> GetDummyTravelPackages()
    {
        var iataLocations = new List<IataLocation>
        {
            new IataLocation { Id = 1, Iata = "JFK", City = "New York" },
            new IataLocation { Id = 2, Iata = "LAX", City = "Los Angeles" },
            new IataLocation { Id = 3, Iata = "LHR", City = "London" }
        };

        var flights = new List<Flight>
        {
            new Flight
            {
                Id = 1, DepartureTime = DateTime.Now, ArrivalTime = DateTime.Now.AddHours(3),
                Iatadestination = iataLocations[1], Iataorigin = iataLocations[0]
            },
            new Flight
            {
                Id = 2, DepartureTime = DateTime.Now.AddDays(1), ArrivalTime = DateTime.Now.AddDays(1).AddHours(3),
                Iatadestination = iataLocations[0], Iataorigin = iataLocations[1]
            }
        };

        var hotels = new List<Hotel>
        {
            new Hotel
            {
                Id = 1, Name = "Sunshine Hotel", Address = "123 Sunny St", Telephonenumber = "123-456-7890",
                Email = "sunshine@hotel.com", Description = "A bright and sunny hotel",
                CheckIn = DateTime.Now, CheckOut = DateTime.Now.AddDays(5), Rate = 150.00m
            }
        };

        var flightpaths = new List<Flightpath>
        {
            new Flightpath
            {
                Id = 1, Fare = 500.00m, Luggage = true, OutboundFlight = flights[0], HomeboundFlight = flights[1],
                OutboundFlightId = flights[0].Id, HomeboundFlightId = flights[1].Id
            }
        };

        var travelPackages = new List<TravelPackage>
        {
            new TravelPackage
            {
                Id = 1, Title = "Summer Vacation", Description = "A fun summer getaway",
                Hotel = hotels[0], HotelId = hotels[0].Id, Flightpaths = flightpaths
            }
        };

        // Establish relationships
        foreach (var flightpath in flightpaths)
        {
            flightpath.OutboundFlight.FlightpathOutboundFlights.Add(flightpath);
            flightpath.HomeboundFlight.FlightpathHomeboundFlights.Add(flightpath);
            flightpath.TravelPackage = travelPackages[0];
        }

        foreach (var hotel in hotels)
        {
            hotel.TravelPackages.Add(travelPackages[0]);
        }

        return travelPackages;
    }
}
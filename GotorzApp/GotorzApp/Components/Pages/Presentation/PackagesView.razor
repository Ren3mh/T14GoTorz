@page "/packages"
@inject IService<TravelPackage> TravelPackageService
@using System.Linq
@inject IJSRuntime JSRuntime
@using System.Diagnostics
@rendermode InteractiveServer


<h2>@Header</h2>

<input type="datetime" @bind-value="EarliestDeparture"/>
<label for="leavingFrom" class="form-label">Rejser fra:</label>
<InputSelect id="leavingFrom" @bind-Value="LeavingFrom">
    @if (iataLocations.Count() == 0)
    {
        <span>Loading...</span>
    }
    else
    {@foreach (var iata in iataLocations)
        {
            <option value="@iata">@iata.Iata (@iata.City)</option>
        }
    }
</InputSelect>
<button @onclick="FilterByDate">OPDATER</button>

@if (travelPackages == null)
{
    <span>Loading...</span>
}
else if(travelPackages.Count == 0)
{
    <span>No packages found.</span>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var travelPackage in filteredTravelPackages)
                        {
                            <tr>
                                <td>@travelPackage.Title</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var travelPackage in travelPackages)
                        {
                            <tr>
                                <td>@travelPackage.Title</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-1">

            </div>
            <div class="col">
                <h2>@SelectedPackage.Title</h2>
                <div class="col">
                    <h3>Hotel</h3>
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <h5>Name</h5>
                                <p>@SelectedPackage.Hotel.Name</p>
                            </div>
                            <div class="col">
                                <h5>Check In</h5>
                                <p>@SelectedPackage.Hotel.CheckIn</p>
                            </div>
                            <div class="col">
                                <h5>Check Out</h5>
                                <p>@SelectedPackage.Hotel.CheckOut</p>
                            </div>
                            <div class="col">
                                <h5>Address</h5>
                                <p>@SelectedPackage.Hotel.Address</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <h3>Flightpaths</h3>
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <h5>From</h5>
                                @foreach (var flightpath in SelectedPackage.Flightpaths)
                                {
                                    <p>@flightpath.OutboundFlight.Iataorigin.City - @flightpath.OutboundFlight.Iataorigin.Iata</p>
                                }
                            </div>
                            <div class="col">
                                <h5>To</h5>
                                @foreach (var flightpath in SelectedPackage.Flightpaths)
                                {
                                    <p>@flightpath.OutboundFlight.Iatadestination.City - @flightpath.OutboundFlight.Iatadestination.Iata</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@code {
    public TravelPackage? SelectedPackage => filteredTravelPackages.FirstOrDefault();

    public DateTime EarliestDeparture;

    private List<TravelPackage> filteredTravelPackages = new List<TravelPackage>();

    private List<TravelPackage> travelPackages;

    public string Header = "Fly pakker";

    public IataLocation LeavingFrom = new IataLocation();

    public List<IataLocation> iataLocations = new List<IataLocation>();


    private async Task FilterByDate()
    {
        filteredTravelPackages = travelPackages
            .Where(tp => tp.Flightpaths.Any(f => f.OutboundFlight.DepartureTime >= EarliestDeparture))
            .Where(tp => tp.Flightpaths.Any(f => f.OutboundFlight.Iataorigin == LeavingFrom))
            .ToList();

    }

    protected override async Task OnInitializedAsync()
    {
        travelPackages = await TravelPackageService.GetAll() ?? new List<TravelPackage>();
        filteredTravelPackages = travelPackages;
        foreach (TravelPackage tp in travelPackages)
        {
            foreach (Flightpath fp in tp.Flightpaths)
            {
                iataLocations.Add(fp.OutboundFlight.Iataorigin);

            }
        }       
    }

    
}



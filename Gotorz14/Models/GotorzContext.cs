// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Reflection.Metadata;
using Microsoft.EntityFrameworkCore;

namespace Gotorz14.Models;

public partial class GotorzContext : DbContext
{
    public GotorzContext(DbContextOptions<GotorzContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Flightpath> Flightpaths { get; set; }

    public virtual DbSet<Hotel> Hotels { get; set; }

    public virtual DbSet<TravelPackage> TravelPackages { get; set; }

    public virtual DbSet<Flight> Flights { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Flightpath>(entity =>
        {
            entity.Property(e => e.Fare).HasColumnType("decimal(15, 2)");

            entity.HasOne(d => d.TravelPackage).WithMany(p => p.Flightpaths)
                .HasForeignKey(d => d.TravelPackageId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_Flightpaths_TravelPackages");
        });

        modelBuilder.Entity<Hotel>(entity =>
        {
            entity.Property(e => e.Address).IsRequired();
            entity.Property(e => e.CheckIn).HasColumnType("datetime");
            entity.Property(e => e.CheckOut).HasColumnType("datetime");
            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.Email).IsRequired();
            entity.Property(e => e.HotelName).IsRequired();
            entity.Property(e => e.Rate).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.Telephonenumber).IsRequired();
        });

        modelBuilder.Entity<TravelPackage>(entity =>
        {
            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.Title).IsRequired();

            entity.HasOne(d => d.Hotel).WithMany(p => p.TravelPackages)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_TravelPackages_Hotels");
        });

        modelBuilder.Entity<Flight>(entity =>
        {
            entity
                .ToView("vwFlights");

            entity.Property(e => e.ArrivalTime).HasColumnType("datetime");
            entity.Property(e => e.DepartureTime).HasColumnType("datetime");
            entity.Property(e => e.Destination).IsRequired();
            entity.Property(e => e.IataDestination)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.IataOrigin)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.Origin);

            entity.HasOne(d => d.Flightpath)
              .WithMany(p => p.Flights)
              .HasForeignKey(d => d.Id)
              .OnDelete(DeleteBehavior.ClientSetNull)
              .HasConstraintName("FK_Flights_Flightpaths");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}

@page "/flights"
@inject IService<Gotorz14.Models.Flightpath> FlightpathService
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@* @attribute [RenderModeInteractiveServer] *@
@* @rendermode InteractiveServer  *@

<h3>Flight List</h3>

@if (flightpaths == null)
{
	<span>Loading...</span>
}
else if(flightpaths.Count == 0)
{
	<span>No games found.</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Fare
                </th>
                <th>
                    Luggage
                </th>
                <th>
                    Origin
                </th>
                <th>
                    Destination
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in flightpaths)
            {
                <tr>
                    <td>
                        @item.Fare
                    </td>
                    <td>
                        @item.Luggage
                    </td>
                    <td>
                        @item.Outbound.IataOrigin
                    </td>
                    <td>
                        @item.Homebound.IataOrigin
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

<button @onclick="AddFlight" class="btn btn-primary">Add Flight</button>

@code {
	List<Gotorz14.Models.Flightpath>? flightpaths;

	protected override async Task OnInitializedAsync()
	{
		flightpaths = await FlightpathService.GetAll() ?? new List<Gotorz14.Models.Flightpath>();
	}

	void AddFlight()
	{
		NavigationManager.NavigateTo("/flightCreation");
	}

}